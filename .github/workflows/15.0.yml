name: Slackware 15.0 Docker Images

on:
  schedule:
    - cron: '0 3 * * *'
  push:
    branches:
      - 'master'

jobs:
  docker_base_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Fetch x86 ChangeLogs
        run: |
          curl -s -f -o slackware-15.0/ChangeLog.txt.386 https://slackware.osuosl.org/slackware-15.0/ChangeLog.txt
          curl -s -f -o slackware-15.0/ChangeLog.txt.amd64 https://slackware.osuosl.org/slackware64-15.0/ChangeLog.txt

      - name: Cache Base Tarballs
        id: cache-base-tarballs
        uses: actions/cache@v3
        with:
          path: base_tarballs/
          key: ${{ runner.os }}-base-tarballs-15.0-${{ hashFiles('**/slackware-15.0/ChangeLog*', '**/scripts/build_base_image.sh') }}

      - name: Cache Docker Builds
        id: cache-docker-build
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-dockerbuild-15.0-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-dockerbuild-15.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build prerequisites
        if: steps.cache-base-tarballs.outputs.cache-hit != 'true'
        run: |
          docker run --cap-add SYS_ADMIN --security-opt apparmor:unconfined --rm -e RELEASENAME=slackware -e ARCH=i586 -e VERSION=15.0 -e CHOWN_TO="$(id -u):$(id -g)" -v "$(pwd):/data" -v "$(pwd)/scripts:/scripts" alpine:3.15 sh /scripts/build_base_image.sh
          docker run --cap-add SYS_ADMIN --security-opt apparmor:unconfined --rm -e RELEASENAME=slackware64 -e ARCH=x86_64 -e VERSION=15.0 -e CHOWN_TO="$(id -u):$(id -g)" -v "$(pwd):/data" -v "$(pwd)/scripts:/scripts" alpine:3.15 sh /scripts/build_base_image.sh
          cp *.tar base_tarballs/

      - name: Restore prerequisites
        if: steps.cache-base-tarballs.outputs.cache-hit == 'true'
        run: |
          cp base_tarballs/*tar .

      - name: Fetch Arm ChangeLog
        run: |
          curl -s -f -o slackware-15.0/ChangeLog.txt.arm https://slackware.uk/slackwarearm/slackwarearm-15.0/ChangeLog.txt

      - name: Fetch Miniroot details
        run: |
          curl -s -f -o slackware-15.0/slackarm-15.0-miniroot_details.txt https://slackware.uk/slackwarearm/slackwarearm-devtools/minirootfs/roots/slackarm-15.0-miniroot_details.txt
          curl -s -f -o slackware-15.0/slackarm-15.0-miniroot_details.txt.asc https://slackware.uk/slackwarearm/slackwarearm-devtools/minirootfs/roots/slackarm-15.0-miniroot_details.txt.asc

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          platforms: linux/amd64,linux/386,linux/arm/v7
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-next,mode=max
          context: .
          file: slackware-15.0/Dockerfile
          tags: |
            ghcr.io/${{ github.repository_owner }}/slackware:15.0-base
            ${{ github.repository_owner }}/slackware:15.0-base
            ${{ github.repository_owner }}/slackware:latest

      - name: Trim cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-next /tmp/.buildx-cache

  docker_full_build:
    needs: docker_base_build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: |
            network=host

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Fetch ChangeLogs
        run: |
          curl -s -f -o slackware-15.0/ChangeLog.txt.amd64 https://slackware.osuosl.org/slackware64-15.0/ChangeLog.txt

      - name: Cache Changelogs
        id: cache-changelogs
        uses: actions/cache@v3
        with:
          path: /tmp/changelogs
          key: ${{ runner.os }}-dockerbuild-15.0-full-${{ hashFiles('**/slackware-15.0/ChangeLog*', '**/scripts/install_all.sh', 'Dockerfile') }}-${{ github.run_id }}
          restore-keys: |
              ${{ runner.os }}-dockerbuild-15.0-full-${{ hashFiles('**/slackware-15.0/ChangeLog*', '**/scripts/install_all.sh', 'Dockerfile') }}

      - name: Check status after cache hit
        if: steps.cache-changelogs.outputs.cache-hit == 'true'
        run: |
          echo "BUILD_IMAGE=0" >> $GITHUB_ENV

      - name: Check status after cache miss
        if: steps.cache-changelogs.outputs.cache-hit != 'true'
        run: |
          echo "BUILD_IMAGE=1" >> $GITHUB_ENV
          mkdir -p /tmp/changelogs
          printf "%s\n" "${{ hashFiles('**/slackware-15.0/ChangeLog*', '**/scripts/install_all.sh', 'Dockerfile') }}" > /tmp/changelogs/key

      - name: Rsync repo
        if: ${{ env.BUILD_IMAGE }}
        run: |
          bash scripts/sync_local_mirror.sh slackware64-15.0

      - name: Run local mirror
        run: docker run -d --rm -v "$(pwd)/local_mirrors:/usr/share/nginx/html:ro" -p 3000:80 --name mirror nginx:alpine

      - name: Build and push
        uses: docker/build-push-action@v3
        if: ${{ env.BUILD_IMAGE }}
        with:
          push: true
          platforms: linux/amd64
          cache-from: type=registry,ref=${{ github.repository_owner }}/slackware:latest-full
          cache-to: type=inline
          build-args: |
            base_image=aclemons/slackware:15.0-base
            mirror=http://localhost:3000/slackware64-15.0/
          network: host
          context: .
          file: Dockerfile
          tags: |
            ghcr.io/${{ github.repository_owner }}/slackware:15.0-full
            ${{ github.repository_owner }}/slackware:15.0-full
            ${{ github.repository_owner }}/slackware:latest-full

      - name: Stop the local mirror
        run: docker container stop mirror
